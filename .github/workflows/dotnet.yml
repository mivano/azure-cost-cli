# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: .NET

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true


permissions:
  contents: read # This is required for actions/checkout
  checks: write # This is required for dorny/test-reporter
  id-token: write # This is required for requesting the JWT
  pull-requests: write # This is required for commenting on PRs

on:
  push:
    branches: [ "main" ]
    paths:
      - "src/**"
      - "tests/**"
      - ".github/workflows/dotnet.yml" 
  pull_request:
    branches: [ "main" ]
    paths:
      - "src/**"
      - "tests/**"
      - ".github/workflows/dotnet.yml" 
      
jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip-ci')"
    defaults:
      run:
        working-directory: ./src
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: |
          8.0.x
          9.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger "trx;LogFileName=test_results.trx" --logger "console;verbosity=detailed" --results-directory ./coverage
    - name: Generate coverage report
      run: |
         dotnet tool install -g dotnet-reportgenerator-globaltool --version 5.4.9
         reportgenerator -reports:"coverage/**/coverage.cobertura.xml" -targetdir:"coverage-report" -reporttypes:"Cobertura;MarkdownSummaryGithub"
       
    - name: Create Test Report
      uses: dorny/test-reporter@v2
      if: always()
      with:
        name: Tests
        path: "**/*.trx" # Path to test results (inside artifact .zip)
        reporter: dotnet-trx # Format of test results

    - name: Add Coverage Report to Job Summary
      if: always()
      run: |
        if [ -f "coverage-report/SummaryGithub.md" ]; then
          echo "## 📊 Code Coverage Report" >> $GITHUB_STEP_SUMMARY
          cat coverage-report/SummaryGithub.md >> $GITHUB_STEP_SUMMARY
        else
          echo "## ⚠️ No Coverage Report Generated" >> $GITHUB_STEP_SUMMARY
          echo "Coverage report file not found at coverage-report/SummaryGithub.md" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Code Coverage Report
      if: github.event_name == 'pull_request'
      uses: 5monkeys/cobertura-action@master
      with:
        path: src/coverage-report/Cobertura.xml
        minimum_coverage: 75
        fail_below_threshold: false
        show_lines: true
        show_branch: true
        show_missing: true
        link_missing_lines: true
        only_changed_files: true
